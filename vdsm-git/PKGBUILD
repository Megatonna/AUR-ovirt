# Contributor: Andrii Sokolenko
# Based by Ovirt repo fc25 vdsm.spec
pkgname=vdsm-git
pkgver=4.20.890.gitef66674
pkgrel=1
pkgdesc="Virtual Desktop Server Manager"
arch=('i686' 'x86_64')
url="https://www.ovirt.org/develop/developer-guide/vdsm/vdsm/"
license=('GPLv2+')
groups=()
makedepends=('openssl' \
             'python' \
             'python-cpopen' \
             'python-six>=1.9.0' \
             'python-dateutil' \
             'python-yaml' \
             'python2'
             'systemd' \
             'autoconf' \
             'automake' \
             'gettext' \
             'libtool')
#libguestfs - virt-v2v
depends=('dmidecode' \
         'python-dmidecode' \
         'libguestfs' \
         'libguestfs-python3' \
         'chrony' \
         'dhclient' \
         'python-dbus' \
         'ethtool' \
         'which' \
         'sudo>=1.7.3' \
         'logrotate' \
         'lshw' \
         'xz' \
         'iproute2>=3.10.0' \
         'python-yaml' \
         'python-nose' \
         'python2-ipaddress' \
         'python-dateutil' \
         'python-netaddr' \
         'python2-netaddr' \
         'python-pyinotify' \
         'python2-pyinotify'
         'python-cpopen>=1.5' \
         'python2-ioprocess>=0.16.1' \
         'python2-pthreading>=0.1.3-3' \
         'python-six>=1.9.0' \
         'nfs-utils' \
         'libnl' \
         'abrt-addon-vmcore' \
         'abrt-addon-ccpp' \
         'abrt-addon-python' \
         'curl' \
         'safelease>=1.0' \
         'mom>=0.5.8' \
         'openvswitch>=2.0.0' \
         'libvirt' \
         'open-iscsi' \
         'sanlock>=3.4.0' \
         'python2-sanlock' \
         'multipath-tools' \
         'ovirt-imageio-common' \
         'ovirt-imageio-daemon' \
         'ovirt-vmconsole>=1.0.0' \
         'systemd' \
         'python>=2.7.3' \
         'e2fsprogs>=1.41.14' \
         'sed>=4.2.1' \
         'ed' \
         'lvm2>=2.02.132' \
         'qemu' \
         'glusterfs' \
         'psmisc>=22.6' \
         'bridge-utils' \
         'sos' \
         'tree' \
         'dosfstools' \
         'cdrtools' \
         'fence-agents' \
         'glusterfs' \
         'python2-decorator' \
         'libsasl' \
         'inetutils' \
         'usbutils' \
         'fcoe-utils' \
         'python-magic' \
         'xfsprogs' \
         'libselinux')
optdepends=('python-blivet: Gluster Plugin for VDSM' \
            'vhostmd: For interaction with vhostmd')
provides=('vdsm' 'vdsm-cli' 'vdsm-xmlrpm' 'vdsm-api' 'vdsm-jsonrpc' 'vdsm-yajsonrpc' \ 
          'vdsm-python' 'vdsm-tests' 'vdsm-hook-allocate_net' 'vdsm-hook-checkimages' \
          'vdsm-hook-checkips' 'vdsm-hook-diskunmap' 'vdsm-hook-ethtool-options')

#         'libvirt-client' \
#         'libvirt-daemon-config-nwfilter' \
#         'libvirt-lock-sanlock' \
#         'libvirt-daemon-kvm' \
#         'libvirt-python>=2.2.0' \
# Network-Manager-config-server
#This configuration file changes NetworkManager's behavior to
# what's expected on "traditional UNIX server" type deployments.
#
# See "man NetworkManager.conf" for more information about these
# and other keys.

#[main]
# Do not do automatic (DHCP/SLAAC) configuration on ethernet devices
# with no other matching connections.
#no-auto-default=*

# Ignore the carrier (cable plugged in) state when attempting to
# activate static-IP connections.
#ignore-carrier=*#


conflicts=()
replaces=()
backup=()
#options=(!emptydirs)
install=$pkgname.install
source=('git+https://gerrit.ovirt.org/vdsm'
        'qemu-kvm.sh')
sha256sums=('SKIP'
'1303e42d789b45776ad4d3afa5f8ae8b8e3afc2c0c9e0d8a861b200cf4a3c012')
_systemddir=/usr/lib/systemd
#prepare() {
#}
build() {
  cd ${srcdir}/${pkgname%%-git}
  export PYTHON="$(which python2)"
  sed -ie 's/python-config/python2-config/g' configure.ac
  sed -ie 's/sysconfig\/libvirtd/conf.d\/libvirtd/g' lib/vdsm/tool/configurators/libvirt.py
  sed -ie 's/iscsid.service/open-iscsi.service/g' static/usr/lib/systemd/system/vdsmd.service.in
  ./autogen.sh
  ./configure --prefix=/usr --libexec=/usr/lib --sysconfdir=/etc \
    --enable-hooks \
    --enable-python3 \
    --with-smbios-manufacture='oVirt' \
    --with-smbios-osname='oVirt Node' \
    --with-ovirt-vmconsole-user='vdsm' \
    --with-ovirt-vmconsole-group='kvm' \
    --with-qemu-group='kvm' \
    --with-libvirt-service-default='/etc/conf.d/libvirtd' \
    --disable-libvirt-selinux \
    --disable-libvirt-sanlock \
    --with-data-center='/rhev/data-center'
  make
  # Setting software_version and software_revision in dsaversion.py
  _baserelease=`echo "$pkgver" | sed 's/\([0-9]\+\(\.[0-9]\+\)\?\).*/\1/'`
#  _baseversion=`echo "%{version}" | sed 's/\([0-9]\+\(\.[0-9]\+\)\?\).*/\1/'`
  _baseversion=$_baserelease
  _rawversion=$pkgver-$pkgrel
  _site_dir=`$PYTHON -c "from distutils.sysconfig import get_python_lib; print(get_python_lib())"`
  sed -i -e 's/^software_version =.*/software_version = "'"${_baseversion}"'"/' \
           -e 's/^raw_version_revision =.*/raw_version_revision = "'"${_rawversion}"'"/' \
                  -e 's/^software_revision =.*/software_revision = "'"${_baserelease}"'"/' lib/vdsm/dsaversion.py
  sed -i -e 's|@VDSMRPCPYLIBDIR@|'"${_site_dir}/vdsm/rpc"'|g' lib/vdsm/constants.py
}

check() {
  cd ${srcdir}/${pkgname%%-git}
#  export PYTHON="$(which python2)"
#  make check
}

package() {
  cd ${srcdir}/${pkgname%%-git}
#  export PYTHON="$(which python2)"
  make DESTDIR="$pkgdir" LIBDIR="/usr/lib" BINDIR="/usr/bin" install

  install -dDm 0755 ${pkgdir}/var/log/vdsm
  install -m 0755 ../qemu-kvm.sh "$pkgdir/usr/bin/qemu-kvm"
  touch ${pkgdir}/var/log/vdsm/{mom.log,supervdsm.log,vdsm.log}

  # Install the lvm rules
  install -Dm 0644 lib/vdsm/storage/vdsm-lvm.rules \
                     ${pkgdir}/etc/udev/rules.d/12-vdsm-lvm.rules
  #systemd
  install -Dm 0755 init/systemd/systemd-vdsmd ${pkgdir}/${_systemddir}/systemd-vdsmd
  install -Dm 0644 init/systemd/85-vdsmd.preset ${pkgdir}/${_systemddir}/system-preset/85-vdsmd.preset

  install -Dm 0644 init/systemd/vdsm-tmpfiles.d.conf \
                     ${pkgdir}/usr/lib/tmpfiles.d/vdsm.conf
  install -Dm 0644 init/systemd/unlimited-core.conf \
                     ${pkgdir}/etc/systemd/system/libvirtd.service.d/unlimited-core.conf
  install -Dm 0644 vdsm_hooks/fcoe/85-vdsm-hook-fcoe.preset ${pkgdir}/${_systemddir}/system-preset/
  # Install the polkit for libvirt
  install -Dm 0644 vdsm/vdsm-libvirt-access.rules \
                    ${pkgdir}/etc/polkit-1/rules.d/10-vdsm-libvirt-access.rules

# Install the libvirt hook for cleaning up the XML
  install -Dm 0755 vdsm/virt/libvirt-hook.sh \
                   ${pkgdir}/etc/libvirt/hooks/qemu

}

# vim:set ts=2 sw=2 et:
