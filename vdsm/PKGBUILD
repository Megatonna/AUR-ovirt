# Contributor: Andrii Sokolenko
# Based by Ovirt repo fc25 vdsm.spec
pkgname=vdsm
pkgver=4.20.1
pkgrel=1
pkgdesc="Virtual Desktop Server Manager"
arch=('i686' 'x86_64')
url="https://www.ovirt.org/develop/developer-guide/vdsm/vdsm/"
license=('GPLv2+')
groups=()
makedepends=('openssl' \
             'python2' \
             'python2-cpopen' \
             'python2-six>=1.9.0' \
             'python2-dateutil' \
             'python2-yaml' \
             'python2-systemd' \
             'autoconf' \
             'automake' \
             'gettext' \
             'libtool')
#libguestfs - virt-v2v
depends=('dmidecode' \
         'x86_energy_perf_policy' # modprobe msr,cpuid? \
         'python2-dmidecode' \
         'libguestfs' \
         'polkit' \
         'chrony' \
         'dhclient' \
         'python2-dbus' \
         'ethtool' \
         'which' \
         'sudo>=1.7.3' \
         'logrotate' \
         'lshw' \
         'xz' \
         'iproute2>=3.10.0' \
         'python2-yaml' \
         'python2-nose' \
         'python2-ipaddress' \
         'python2-dateutil' \
         'python2-netaddr' \
         'python2-pyinotify'
         'python2-cpopen>=1.5' \
         'python2-ioprocess>=0.16.1' \
         'python2-pthreading>=0.1.3-3' \
         'python2-six>=1.9.0' \
         'nfs-utils' \
         'libnl' \
         'abrt-addon-vmcore' \
         'abrt-addon-ccpp' \
         'abrt-addon-python' \
         'curl' \
         'safelease>=1.0' \
         'mom>=0.5.8' \
         'openvswitch>=2.0.0' \
         'libvirt' \
         'open-iscsi' \
         'sanlock>=3.4.0' \
         'python2-sanlock' \
         'multipath-tools-git' \
         'ovirt-imageio-common' \
         'ovirt-imageio-daemon' \
         'ovirt-vmconsole>=1.0.0' \
         'systemd' \
         'python>=2.7.3' \
         'e2fsprogs>=1.41.14' \
         'sed>=4.2.1' \
         'ed' \
         'lvm2>=2.02.132' \
         'qemu' \
         'glusterfs' \
         'psmisc>=22.6' \
         'bridge-utils' \
         'sos' \
         'tree' \
         'dosfstools' \
         'cdrtools' \
         'fence-agents' \
         'glusterfs' \
         'python2-decorator' \
         'libsasl' \
         'inetutils' \
         'usbutils' \
         'fcoe-utils' \
         'python2-magic' \
         'xfsprogs' \
         'libselinux')
optdepends=('python-blivet: Gluster Plugin for VDSM' \
            'vhostmd: For interaction with vhostmd')
provides=('vdsm' 'vdsm-cli' 'vdsm-xmlrpm' 'vdsm-api' 'vdsm-jsonrpc' 'vdsm-yajsonrpc' \ 
          'vdsm-python' 'vdsm-tests' 'vdsm-hook-allocate_net' 'vdsm-hook-checkimages' \
          'vdsm-hook-checkips' 'vdsm-hook-diskunmap' 'vdsm-hook-ethtool-options')

#         'libvirt-client' \
#         'libvirt-daemon-config-nwfilter' \
#         'libvirt-lock-sanlock' \
#         'libvirt-daemon-kvm' \
#         'libvirt-python>=2.2.0' \
# Network-Manager-config-server
#This configuration file changes NetworkManager's behavior to
# what's expected on "traditional UNIX server" type deployments.
#
# See "man NetworkManager.conf" for more information about these
# and other keys.

#[main]
# Do not do automatic (DHCP/SLAAC) configuration on ethernet devices
# with no other matching connections.
#no-auto-default=*

# Ignore the carrier (cable plugged in) state when attempting to
# activate static-IP connections.
#ignore-carrier=*#


conflicts=()
replaces=()
backup=()
#options=(!emptydirs)
install=$pkgname.install
source=("https://github.com/oVirt/vdsm/archive/v${pkgver}.tar.gz"
 '0001-libexec.patch' '0002-Makefile.patch' 'vdsm-logrotate.timer' 'vdsm-logrotate.service' '0003-logrotate.patch'
 'qemu-kvm.sh')
sha256sums=('SKIP' 'SKIP' 'SKIP' 'SKIP' 'SKIP' 'SKIP'
'1303e42d789b45776ad4d3afa5f8ae8b8e3afc2c0c9e0d8a861b200cf4a3c012')
_systemddir=/usr/lib/systemd

prepare() {
  cd ${srcdir}/${pkgname}-${pkgver}
  echo v${pkgver} > VERSION
  grep -Rle "#\!/usr/bin/python" * | xargs -r sed -i'' -e 's/#!\/usr\/bin\/\bpython\b/\#!\/usr\/bin\/python2/g'
  sed -i'' -e 's/python-config/python2-config/g' -e 's|/libexec/|/lib/|g' configure.ac
  sed -i'' -e 's/sysconfig\/libvirtd/conf.d\/libvirtd/g' lib/vdsm/tool/configurators/libvirt.py
  sed -i'' -e 's/iscsid.service/open-iscsi.service/g' static/usr/lib/systemd/system/vdsmd.service.in
  sed -i'' -e 's/PYTHONPATH=/PYTHONPATH=$(PYTHONPATH):/g' lib/vdsm/api/Makefile.am
  patch -Np0 -i ../0001-libexec.patch
  patch -Np0 -i ../0002-Makefile.patch
  patch -Np0 -i ../0003-logrotate.patch
}
build() {
  cd ${srcdir}/${pkgname}-${pkgver}
  export PYTHON="$(which python2)"
  autoreconf -if 
  ./configure --prefix=/usr --libexec=/usr/lib --sysconfdir=/etc --sbindir=/usr/bin --localstatedir=/var \
    --enable-hooks \
    --disable-python3 \
    --with-smbios-manufacturer='oVirt' \
    --with-smbios-osname='oVirt Node' \
    --with-ovirt-vmconsole-user='vdsm' \
    --with-ovirt-vmconsole-group='kvm' \
    --with-qemu-group='kvm' \
    --with-libvirt-service-default='/etc/conf.d/libvirtd' \
    --disable-openvswitch \
    --disable-ovirt-imageio \
    --disable-ovirt-vmconsole \
    --disable-vhostmd \
    --disable-containers \
    --disable-libvirt-selinux \
    --disable-libvirt-sanlock \
    --disable-gluster-mgmt \
    --with-data-center='/ovirt/data-center'
  make
  # Setting software_version and software_revision in dsaversion.py
  _baserelease=`echo "$pkgver" | sed 's/\([0-9]\+\(\.[0-9]\+\)\?\).*/\1/'`
#  _baseversion=`echo "%{version}" | sed 's/\([0-9]\+\(\.[0-9]\+\)\?\).*/\1/'`
  _baseversion=$_baserelease
  _rawversion=$pkgver-$pkgrel
  _site_dir=`$PYTHON -c "from distutils.sysconfig import get_python_lib; print(get_python_lib())"`
  sed -i -e 's/^software_version =.*/software_version = "'"${_baseversion}"'"/' \
           -e 's/^raw_version_revision =.*/raw_version_revision = "'"${_rawversion}"'"/' \
                  -e 's/^software_revision =.*/software_revision = "'"${_baserelease}"'"/' lib/vdsm/dsaversion.py
  sed -i -e 's|@VDSMRPCPYLIBDIR@|'"${_site_dir}/vdsm/rpc"'|g' lib/vdsm/constants.py
}

check() {
  cd ${srcdir}/${pkgname}-${pkgver}
#  export PYTHON="$(which python2)"
#  make check
}

package() {
  cd ${srcdir}/${pkgname}-${pkgver}
#  export PYTHON="$(which python2)"
  make DESTDIR="$pkgdir" install

  install -dDm 0755 ${pkgdir}/var/log/vdsm
  install -dDm 0755 ${pkgdir}/etc/otopi.env.d
  install -m 0755 ../qemu-kvm.sh "$pkgdir/usr/bin/qemu-kvm"

  # Install the lvm rules
  install -Dm 0644 vdsm/storage/vdsm-lvm.rules \
                     ${pkgdir}/usr/lib/udev/rules.d/12-vdsm-lvm.rules
  #systemd
  install -Dm 0644 init/systemd/85-vdsmd.preset ${pkgdir}/${_systemddir}/system-preset/85-vdsmd.preset
  install -Dm 0755 init/systemd/systemd-vdsmd ${pkgdir}/${_systemddir}/systemd-vdsmd
  install -Dm 0644 ../vdsm-logrotate.timer ${pkgdir}/${_systemddir}/system/vdsm-logrotate.timer
  install -Dm 0644 ../vdsm-logrotate.service ${pkgdir}/${_systemddir}/system/vdsm-logrotate.service
  
  install -Dm 0644 init/systemd/vdsm-tmpfiles.d.conf \
                     ${pkgdir}/usr/lib/tmpfiles.d/vdsm.conf
  install -Dm 0644 init/systemd/unlimited-core.conf \
                     ${pkgdir}/etc/systemd/system/libvirtd.service.d/unlimited-core.conf
  install -Dm 0644 vdsm_hooks/fcoe/85-vdsm-hook-fcoe.preset ${pkgdir}/${_systemddir}/system-preset/

  # Install the polkit for libvirt
  install -Dm 0644 vdsm/vdsm-libvirt-access.rules \
                     ${pkgdir}/usr/share/polkit-1/rules.d/10-vdsm-libvirt-access.rules
# Install the libvirt hook for cleaning up the XML
  install -Dm 0755 vdsm/virt/libvirt-hook.sh \
                   ${pkgdir}/etc/libvirt/hooks/qemu
  mv ${pkgdir}/etc/cron.hourly/vdsm-logrotate ${pkgdir}/usr/lib/vdsm/
  mv ${pkgdir}/var/run ${pkgdir}/run
  rm -rf ${pkgdir}/etc/cron*
}

# vim:set ts=2 sw=2 et:
